---
import { ui, type Language } from '../i18n/ui';

interface Props {
  lang: Language;
}

const { lang } = Astro.props;

const links = [
  { link: 'about-me', label: ui[lang]['nav.about'] },
  { link: 'experience', label: ui[lang]['nav.experience'] },
  { link: 'projects', label: ui[lang]['nav.projects'] },
  { link: 'studies', label: ui[lang]['nav.studies'] },
  { link: 'certifications', label: ui[lang]['nav.certifications'] },
];
---

<header class="sticky top-2">
  <nav
    class="px-4 flex gap-5 justify-center items-center py-3 mb-4 flex-wrap border-r-0 rounded-xl bg-slate-800"
  >
    <a href="#" class="hidden text-blue-500"></a>
    {
      links.map(({ label, link }) => (
        <a
          class="hover:text-blue-500 text-sm"
          href={`#${link}`}
          data-link={`#${link}`}
        >
          {label}
        </a>
      ))
    }

    <div class="flex gap-2">
      <a
        href="/es"
        class={`text-sm ${lang === 'es' ? 'text-blue-500' : 'text-slate-200'}`}
      >
        <img src="/spanish.png" class="h-[30px]" alt="Spanish icon" />
      </a>
      <a
        href="/en"
        class={`text-sm ${lang === 'en' ? 'text-blue-500' : 'text-slate-200'}`}
      >
        <img src="/english.png" class="h-[30px]" alt="English icon" />
      </a>
    </div>
  </nav>
</header>

<script>
  // Seleccionar todas las secciones y enlaces
  const sections = document.querySelectorAll("section");
  const navLinks = document.querySelectorAll("[data-link]");

  // Opciones para el Intersection Observer
  const observerOptions = {
    root: null,
    rootMargin: "-50% 0px",
    threshold: 0,
  };

  // Crear el observer
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        // Obtener el id de la secciÃ³n actual
        const id = `#${entry.target.id}`;

        // Actualizar clases de los enlaces
        navLinks.forEach((link) => {
          if (link.getAttribute("data-link") === id) {
            link.classList.add("text-blue-500");
          } else {
            link.classList.remove("text-blue-500");
          }
        });
      }
    });
  }, observerOptions);

  // Observar todas las secciones
  sections.forEach((section) => {
    observer.observe(section);
  });
</script>
