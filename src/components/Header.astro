---
import { ui, type Language } from '../i18n/ui';

interface Props {
  lang: Language;
}

const { lang } = Astro.props;

const links = [
  { link: 'about-me', label: ui[lang]['nav.about'] },
  { link: 'experience', label: ui[lang]['nav.experience'] },
  { link: 'projects', label: ui[lang]['nav.projects'] },
  { link: 'studies', label: ui[lang]['nav.studies'] },
  { link: 'certifications', label: ui[lang]['nav.certifications'] },
];
---

<header class="sticky top-2">
  <nav
    class="px-4 flex gap-5 justify-center items-center py-3 mb-4 flex-wrap border-r-0 rounded-xl bg-slate-800"
  >
    <a href="#" class="hidden text-blue-500"></a>
    {
      links.map(({ label, link }) => (
        <a
          class="hover:text-blue-500 text-sm"
          href={`#${link}`}
          data-link={`#${link}`}
        >
          {label}
        </a>
      ))
    }

    <div class="flex gap-2">
      <select
        class="bg-slate-700 text-slate-200 text-sm rounded-lg px-2 py-1 cursor-pointer hover:bg-slate-700 transition-colors"
        onchange="window.location.href = this.value"
      >
        <option value="/es" selected={lang === 'es'}>Español</option>
        <option value="/en" selected={lang === 'en'}>English</option>
      </select>
    </div>
  </nav>
</header>

<script>
  // Seleccionar todas las secciones y enlaces
  const sections = document.querySelectorAll('section');
  const navLinks = document.querySelectorAll('[data-link]');

  // Opciones para el Intersection Observer
  const observerOptions = {
    root: null,
    rootMargin: '-50% 0px',
    threshold: 0,
  };

  // Crear el observer
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        // Obtener el id de la sección actual
        const id = `#${entry.target.id}`;

        // Actualizar clases de los enlaces
        navLinks.forEach((link) => {
          if (link.getAttribute('data-link') === id) {
            link.classList.add('text-blue-500');
          } else {
            link.classList.remove('text-blue-500');
          }
        });
      }
    });
  }, observerOptions);

  // Observar todas las secciones
  sections.forEach((section) => {
    observer.observe(section);
  });
</script>
